###############################################################################
# @generated
# This file is auto-generated by the cargo-bazel tool.
#
# DO NOT MODIFY: Local changes may be replaced in future executions.
###############################################################################

load(
    "@bazel_skylib//lib:selects.bzl",
    "selects",
)

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT
# ])

rust_library(
    name = "axum",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = selects.with_or({
        "//conditions:default": {
        },
    }),
    compile_data = glob(["**"]) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "default",
        "form",
        "http1",
        "json",
        "matched-path",
        "original-uri",
        "query",
        "serde_json",
        "serde_urlencoded",
        "tower-log",
    ],
    crate_root = "src/lib.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select_with_or({
        "//conditions:default": [
            "//backend/../vendor/async-trait-0.1.53:async_trait",
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ] + select_with_or({
        "//conditions:default": [
        ],
    }),
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.5.6",
    deps = [
    ] + select_with_or({
        "//conditions:default": [
            "//backend/../vendor/axum-core-0.2.4:axum_core",
            "//backend/../vendor/bitflags-1.3.2:bitflags",
            "//backend/../vendor/bytes-1.1.0:bytes",
            "//backend/../vendor/futures-util-0.3.21:futures_util",
            "//backend/../vendor/http-0.2.7:http",
            "//backend/../vendor/http-body-0.4.5:http_body",
            "//backend/../vendor/hyper-0.14.18:hyper",
            "//backend/../vendor/itoa-1.0.2:itoa",
            "//backend/../vendor/matchit-0.5.0:matchit",
            "//backend/../vendor/memchr-2.5.0:memchr",
            "//backend/../vendor/mime-0.3.16:mime",
            "//backend/../vendor/percent-encoding-2.1.0:percent_encoding",
            "//backend/../vendor/pin-project-lite-0.2.9:pin_project_lite",
            "//backend/../vendor/serde-1.0.137:serde",
            "//backend/../vendor/serde_json-1.0.81:serde_json",
            "//backend/../vendor/serde_urlencoded-0.7.1:serde_urlencoded",
            "//backend/../vendor/sync_wrapper-0.1.1:sync_wrapper",
            "//backend/../vendor/tokio-1.16.1:tokio",
            "//backend/../vendor/tower-0.4.12:tower",
            "//backend/../vendor/tower-http-0.3.3:tower_http",
            "//backend/../vendor/tower-layer-0.3.1:tower_layer",
            "//backend/../vendor/tower-service-0.3.1:tower_service",
        ],
    }),
)
